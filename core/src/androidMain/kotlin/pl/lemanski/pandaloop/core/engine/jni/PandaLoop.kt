/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package pl.lemanski.pandaloop.core.engine.jni

object PandaLoop {
    init {
        System.loadLibrary("pl_engine_swig")
    }
    fun initialize_recording(sizeInBytes: Long, channelCount: Int, sampleRate: Int): Int {
        return PandaLoopJNI.initialize_recording(sizeInBytes, channelCount, sampleRate)
    }

    fun uninitialize_recording() {
        PandaLoopJNI.uninitialize_recording()
    }

    fun stop_recording(sizeInBytes: Long): ByteArray {
        return PandaLoopJNI.stop_recording(sizeInBytes) ?: byteArrayOf()
    }

    fun start_recording(): Int {
        return PandaLoopJNI.start_recording()
    }

    fun initialize_playback_device(channelCount: Int, sampleRate: Int): Int {
        return PandaLoopJNI.initialize_playback_device(channelCount, sampleRate)
    }

    fun set_playback_buffer(buffer: ByteArray?, sizeInBytes: Long): Int {
        return PandaLoopJNI.set_playback_buffer(buffer, sizeInBytes)
    }

    fun uninitialize_playback_device() {
        PandaLoopJNI.uninitialize_playback_device()
    }

    fun start_playback(): Int {
        return PandaLoopJNI.start_playback()
    }

    fun stop_playback() {
        PandaLoopJNI.stop_playback()
    }

    fun get_playback_devices_count(): Int {
        return PandaLoopJNI.get_playback_devices_count()
    }

    fun get_bytes_per_frame(channelCount: Int): Int {
        return PandaLoopJNI.get_bytes_per_frame(channelCount)
    }

    fun save_audio_file(pFilePath: String?, pBuffer: ByteArray?, bufferSize: Int, channelCount: Int, sampleRate: Int): Int {
        return PandaLoopJNI.save_audio_file(pFilePath, pBuffer, bufferSize, channelCount, sampleRate)
    }

    fun load_audio_file(bufferSize: Long, pFilePath: String?): ByteArray {
        return PandaLoopJNI.load_audio_file(bufferSize, pFilePath) ?: byteArrayOf()
    }
}
